#!/bin/bash

#sed -re 's/([a-z]{2}\.)?archive.ubuntu.com|security.ubuntu.com/old-releases.ubuntu.com/g' -i /etc/apt/sources.list

mkdir /etc/apt/disabled.apt.conf.d/
dpkg-divert --divert /etc/apt/disabled.apt.conf.d/99needrestart --rename /etc/apt/apt.conf.d/99needrestart

apt purge snapd -y && apt autoremove -y

# Install dependencies
apt update && apt upgrade -y
apt -y install build-essential software-properties-common patchelf rsync curl wget tar php-pear libxml2-dev pkg-config libcurl4-openssl-dev libssl-dev libpng-dev libjpeg-dev libwebp-dev libmagickwand-dev libzip-dev libargon2-dev libonig-dev libsodium-dev libgmp-dev libbz2-dev libmcrypt-dev libldap-dev libfreetype-dev

# Download PHP
php_major_version=8.2
php_version=$(curl -s https://www.php.net/downloads.php | tac | tac | grep "<h3 id=\"v$php_major_version.*" | grep -o -P '(?<="v).*(?=" class)')
php_version_short=$(echo "$php_major_version" | tr -d ".")

compile_prefix=/usr/src/qycli/php-"$php_version_short"

install_prefix=/var/qyc/bin/php"$php_version_short"
lib_path=/lib/lib/
lib_path_full="$install_prefix""$lib_path"
result_volume_dir=/php"$php_version_short"-result

#export PHP_RPATHS='/lib/qycli/21.10'

[[ -d /usr/src/qycli/php-${php_version_short} ]] && rm -rf "$compile_prefix"

mkdir -p "$compile_prefix"
cd "$compile_prefix" || exit

# Downloading supported PHP versions
wget -O php-"$php_version".tar.xz https://www.php.net/distributions/php-"$php_version".tar.xz
tar -xf php-"$php_version".tar.xz --strip-components=1

# Downloading external extensions
declare -a extensions=("imagick" "redis")
for ext in "${extensions[@]}"; do
    wget -O "$ext".tgz https://pecl.php.net/get/"$ext"
    mkdir -p ext/"$ext"
    tar -zxf "$ext".tgz --strip-components=1 -C ext/"$ext"/
done

# Deleting configure script for extensions to be compiled also
rm configure
./buildconf --force

./configure \
    --prefix="$install_prefix" \
    --with-openssl \
    --enable-fpm \
    --disable-cgi \
    --disable-phpdbg \
    --enable-sockets \
    --without-sqlite3 \
    --without-pdo-sqlite \
    --with-mysqli \
    --with-pdo-mysql \
    --enable-ctype \
    --with-curl \
    --enable-exif \
    --enable-mbstring \
    --with-zip \
    --with-bz2 \
    --enable-bcmath \
    --with-jpeg \
    --with-webp \
    --enable-intl \
    --enable-pcntl \
    --with-ldap \
    --with-gmp \
    --with-password-argon2 \
    --with-sodium \
    --with-zlib \
    --with-freetype \
    --enable-soap \
    --enable-gd \
    --with-imagick \
    --enable-redis=shared

# Compile
make -j4

make install

rsync -a --mkpath "$install_prefix"/ "$result_volume_dir""$install_prefix"

# Getting dynamic libraries
ldd "$install_prefix"/sbin/php-fpm | grep -o "/.* " | cut -d ' ' -f 1 >>"$compile_prefix"/alllibs
for lib in $(ldd "$install_prefix"/sbin/php-fpm | grep -o "/.* "); do
    ldd "$lib" | grep -o "/.* " | cut -d ' ' -f 1 >>"$compile_prefix"/alllibs
    for lib2 in $(ldd "$lib" | grep -o "/.* "); do
        ldd "$lib2" | grep -o "/.* " | cut -d ' ' -f 1 >>"$compile_prefix"/alllibs
        for lib3 in $(ldd "$lib2" | grep -o "/.* "); do
            ldd "$lib3" | grep -o "/.* " | cut -d ' ' -f 1 >>"$compile_prefix"/alllibs
        done
    done
done

cd "$install_prefix"/lib/php/extensions/ || exit
cd "$(ls)" || exit

for ext in *; do
    ldd "$ext" | grep -o "/.* " | cut -d ' ' -f 1 >>"$compile_prefix"/alllibs
    for lib in $(ldd "$ext" | grep -o "/.* "); do
        ldd "$lib" | grep -o "/.* " | cut -d ' ' -f 1 >>"$compile_prefix"/alllibs
        for lib2 in $(ldd "$lib" | grep -o "/.* "); do
            ldd "$lib2" | grep -o "/.* " | cut -d ' ' -f 1 >>"$compile_prefix"/alllibs
        done
    done
done

sort -u "$compile_prefix"/alllibs >"$compile_prefix"/libssorted

mkdir -p "$result_volume_dir""$lib_path_full"

while IFS= read -r lib; do
    libtarget="$result_volume_dir""$lib_path_full""$(basename "$lib")"
    rsync -aL "$lib" "$libtarget"
    # shellcheck disable=SC2016
    patchelf --set-rpath '$ORIGIN' "$libtarget"
done <"$compile_prefix"/libssorted

# Fix interpreter
interpreter_old="$(patchelf --print-interpreter "$install_prefix"/sbin/php-fpm)"
# shellcheck disable=SC2016
origin_lib_path='$ORIGIN/..'"$lib_path"
interpreter_new="$lib_path_full""$(basename "$interpreter_old")"

cp "$interpreter_old" "$result_volume_dir""$lib_path_full""$(basename "$interpreter_old")"

patchelf --set-interpreter "$interpreter_new" --set-rpath "$origin_lib_path" "$result_volume_dir""$install_prefix"/sbin/php-fpm
patchelf --set-interpreter "$interpreter_new" --set-rpath "$origin_lib_path" "$result_volume_dir""$install_prefix"/bin/php
